{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aravind Kaspe\\\\Desktop\\\\SLU-CS\\\\SLU Courses\\\\PSD\\\\PSD-Team7-Project\\\\Source\\\\frontend\\\\my-app\\\\src\\\\Components\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../Contexts/AuthContext';\nimport '../Styles/LoginForm.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [signInEmail, setSignInEmail] = useState('');\n  const [signInPassword, setSignInPassword] = useState('');\n  const [signUpName, setSignUpName] = useState('');\n  const [signUpEmail, setSignUpEmail] = useState('');\n  const [signUpPassword, setSignUpPassword] = useState('');\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const {\n    login\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (showSuccessMessage) {\n      const timer = setTimeout(() => {\n        setShowSuccessMessage(false);\n        navigate('/shop');\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [showSuccessMessage, navigate]);\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/login', {\n        // Update with your backend URL\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          Email: signInEmail,\n          Password: signInPassword\n        }) // Ensure keys match backend\n      });\n      if (response.ok) {\n        const data = await response.json();\n        login(data.token); // Assuming `login` function stores token\n        setShowSuccessMessage(true);\n      } else {\n        alert('Invalid credentials. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error authenticating user:', error);\n      alert('An error occurred. Please try again later.');\n    }\n  };\n  const handleSignUp = async () => {\n    try {\n      const response = await fetch('http://localhost:5555/User/signup', {\n        // Update with your backend URL\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: JSON.stringify({\n          Name: signUpName,\n          Email: signUpEmail,\n          Password: signUpPassword\n        }) // Ensure keys match backend\n      });\n      if (response.ok) {\n        setIsSignUp(false);\n        setSignUpName('');\n        setSignUpEmail('');\n        setSignUpPassword('');\n      } else {\n        alert('Sign up failed. Please try again.');\n      }\n    } catch (error) {\n      //   console.error('Error signing up user:', error);\n      console.log(error);\n      alert('An error occurred. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        id: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `form-container ${isSignUp ? 'sign-up-container' : 'sign-in-container'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: isSignUp ? 'Sign Up' : 'Sign In'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), !isSignUp && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Email\",\n              value: signInEmail,\n              onChange: e => setSignInEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Password\",\n              value: signInPassword,\n              onChange: e => setSignInPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-grad\",\n              onClick: handleLogin,\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), isSignUp && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Name\",\n              value: signUpName,\n              onChange: e => setSignUpName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Email\",\n              value: signUpEmail,\n              onChange: e => setSignUpEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Password\",\n              value: signUpPassword,\n              onChange: e => setSignUpPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-grad\",\n              onClick: handleSignUp,\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => setIsSignUp(!isSignUp),\n            children: isSignUp ? 'Already have an account? Sign in' : 'Don\\'t have an account? Sign up'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Successful Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"jvs+cw+7v8OW6dM9y5yqusOTboo=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useNavigate","AuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","_s","signInEmail","setSignInEmail","signInPassword","setSignInPassword","signUpName","setSignUpName","signUpEmail","setSignUpEmail","signUpPassword","setSignUpPassword","isSignUp","setIsSignUp","showSuccessMessage","setShowSuccessMessage","login","navigate","timer","setTimeout","clearTimeout","handleLogin","response","fetch","method","headers","body","JSON","stringify","Email","Password","ok","data","json","token","alert","error","console","handleSignUp","Name","log","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","href","_c","$RefreshReg$"],"sources":["C:/Users/Aravind Kaspe/Desktop/SLU-CS/SLU Courses/PSD/PSD-Team7-Project/Source/frontend/my-app/src/Components/LoginPage.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../Contexts/AuthContext';\r\nimport '../Styles/LoginForm.css';\r\n\r\nconst LoginPage = () => {\r\n  const [signInEmail, setSignInEmail] = useState('');\r\n  const [signInPassword, setSignInPassword] = useState('');\r\n  const [signUpName, setSignUpName] = useState('');\r\n  const [signUpEmail, setSignUpEmail] = useState('');\r\n  const [signUpPassword, setSignUpPassword] = useState('');\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\r\n  const { login } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (showSuccessMessage) {\r\n      const timer = setTimeout(() => {\r\n        setShowSuccessMessage(false);\r\n        navigate('/shop');\r\n      }, 1000);\r\n\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [showSuccessMessage, navigate]);\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/login', { // Update with your backend URL\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ Email: signInEmail, Password: signInPassword }), // Ensure keys match backend\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        login(data.token); // Assuming `login` function stores token\r\n        setShowSuccessMessage(true);\r\n      } else {\r\n        alert('Invalid credentials. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error authenticating user:', error);\r\n      alert('An error occurred. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const handleSignUp = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5555/User/signup', { // Update with your backend URL\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n        body: JSON.stringify({ Name: signUpName, Email: signUpEmail, Password: signUpPassword }), // Ensure keys match backend\r\n      });\r\n\r\n      if (response.ok) {\r\n        setIsSignUp(false);\r\n        setSignUpName('');\r\n        setSignUpEmail('');\r\n        setSignUpPassword('');\r\n      } else {\r\n        alert('Sign up failed. Please try again.');\r\n      }\r\n    } catch (error) {\r\n    //   console.error('Error signing up user:', error);\r\n    console.log(error);\r\n      alert('An error occurred. Please try again later.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"body-container\">\r\n        <div className=\"container\" id=\"container\">\r\n          <div className={`form-container ${isSignUp ? 'sign-up-container' : 'sign-in-container'}`}>\r\n            <h2>{isSignUp ? 'Sign Up' : 'Sign In'}</h2>\r\n            {!isSignUp && (\r\n              <>\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  value={signInEmail}\r\n                  onChange={(e) => setSignInEmail(e.target.value)}\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={signInPassword}\r\n                  onChange={(e) => setSignInPassword(e.target.value)}\r\n                />\r\n                <button className=\"btn-grad\" onClick={handleLogin}>\r\n                  Sign In\r\n                </button>\r\n              </>\r\n            )}\r\n            {isSignUp && (\r\n              <>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Name\"\r\n                  value={signUpName}\r\n                  onChange={(e) => setSignUpName(e.target.value)}\r\n                />\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  value={signUpEmail}\r\n                  onChange={(e) => setSignUpEmail(e.target.value)}\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={signUpPassword}\r\n                  onChange={(e) => setSignUpPassword(e.target.value)}\r\n                />\r\n                <button className=\"btn-grad\" onClick={handleSignUp}>\r\n                  Sign Up\r\n                </button>\r\n              </>\r\n            )}\r\n            <a href=\"#\" onClick={() => setIsSignUp(!isSignUp)}>\r\n              {isSignUp ? 'Already have an account? Sign in' : 'Don\\'t have an account? Sign up'}\r\n            </a>\r\n          </div>\r\n          {showSuccessMessage && (\r\n            <div className=\"success-message\">\r\n              <p>Successful Sign In</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{useState,useContext,useEffect}from'react';import{useNavigate}from'react-router-dom';import{AuthContext}from'../Contexts/AuthContext';import'../Styles/LoginForm.css';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginPage=()=>{const[signInEmail,setSignInEmail]=useState('');const[signInPassword,setSignInPassword]=useState('');const[signUpName,setSignUpName]=useState('');const[signUpEmail,setSignUpEmail]=useState('');const[signUpPassword,setSignUpPassword]=useState('');const[isSignUp,setIsSignUp]=useState(false);const[showSuccessMessage,setShowSuccessMessage]=useState(false);const{login}=useContext(AuthContext);const navigate=useNavigate();useEffect(()=>{if(showSuccessMessage){const timer=setTimeout(()=>{setShowSuccessMessage(false);navigate('/shop');},1000);return()=>clearTimeout(timer);}},[showSuccessMessage,navigate]);//   const handleLogin = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5555/User/login', { // Update with your backend URL\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ Email: signInEmail, Password: signInPassword }), // Ensure keys match backend\n//       });\n//       if (response.ok) {\n//         const data = await response.json();\n//         login(data.token); // Assuming `login` function stores token\n//         setShowSuccessMessage(true);\n//       } else {\n//         alert('Invalid credentials. Please try again.');\n//       }\n//     } catch (error) {\n//       console.error('Error authenticating user:', error);\n//       alert('An error occurred. Please try again later.');\n//     }\n//   };\nconst handleLogin=async()=>{try{const response=await fetch('http://localhost:5555/User/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({Email:signInEmail,Password:signInPassword})});if(response.ok){const data=await response.json();login(data.token);setShowSuccessMessage(true);}else{alert('Invalid credentials. Please try again.');}}catch(error){console.error('Error authenticating user:',error);alert('An error occurred. Please try again later.');}};const handleSignUp=async()=>{try{const response=await fetch('http://localhost:5555/User/signup',{// Update with your backend URL\nmethod:'POST',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({Name:signUpName,Email:signUpEmail,Password:signUpPassword})// Ensure keys match backend\n});if(response.ok){setIsSignUp(false);setSignUpName('');setSignUpEmail('');setSignUpPassword('');}else{alert('Sign up failed. Please try again.');}}catch(error){//   console.error('Error signing up user:', error);\nconsole.log(error);alert('An error occurred. Please try again later.');}};return/*#__PURE__*/_jsx(\"div\",{className:\"login-page\",children:/*#__PURE__*/_jsx(\"div\",{className:\"body-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",id:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-container \".concat(isSignUp?'sign-up-container':'sign-in-container'),children:[/*#__PURE__*/_jsx(\"h2\",{children:isSignUp?'Sign Up':'Sign In'}),!isSignUp&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:signInEmail,onChange:e=>setSignInEmail(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:signInPassword,onChange:e=>setSignInPassword(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-grad\",onClick:handleLogin,children:\"Sign In\"})]}),isSignUp&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Name\",value:signUpName,onChange:e=>setSignUpName(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:signUpEmail,onChange:e=>setSignUpEmail(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:signUpPassword,onChange:e=>setSignUpPassword(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-grad\",onClick:handleSignUp,children:\"Sign Up\"})]}),/*#__PURE__*/_jsx(\"a\",{href:\"#\",onClick:()=>setIsSignUp(!isSignUp),children:isSignUp?'Already have an account? Sign in':'Don\\'t have an account? Sign up'})]}),showSuccessMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"success-message\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Successful Sign In\"})})]})})});};export default LoginPage;","map":{"version":3,"names":["React","useState","useContext","useEffect","useNavigate","AuthContext","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","LoginPage","signInEmail","setSignInEmail","signInPassword","setSignInPassword","signUpName","setSignUpName","signUpEmail","setSignUpEmail","signUpPassword","setSignUpPassword","isSignUp","setIsSignUp","showSuccessMessage","setShowSuccessMessage","login","navigate","timer","setTimeout","clearTimeout","handleLogin","response","fetch","method","headers","body","JSON","stringify","Email","Password","ok","data","json","token","alert","error","console","handleSignUp","Name","log","className","children","id","concat","type","placeholder","value","onChange","e","target","onClick","href"],"sources":["C:/Users/Aravind Kaspe/Desktop/SLU-CS/SLU Courses/PSD/PSD-Team7-Project/Source/frontend/my-app/src/Components/LoginPage.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../Contexts/AuthContext';\r\nimport '../Styles/LoginForm.css';\r\n\r\nconst LoginPage = () => {\r\n  const [signInEmail, setSignInEmail] = useState('');\r\n  const [signInPassword, setSignInPassword] = useState('');\r\n  const [signUpName, setSignUpName] = useState('');\r\n  const [signUpEmail, setSignUpEmail] = useState('');\r\n  const [signUpPassword, setSignUpPassword] = useState('');\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\r\n  const { login } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (showSuccessMessage) {\r\n      const timer = setTimeout(() => {\r\n        setShowSuccessMessage(false);\r\n        navigate('/shop');\r\n      }, 1000);\r\n\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [showSuccessMessage, navigate]);\r\n\r\n//   const handleLogin = async () => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:5555/User/login', { // Update with your backend URL\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({ Email: signInEmail, Password: signInPassword }), // Ensure keys match backend\r\n//       });\r\n\r\n//       if (response.ok) {\r\n//         const data = await response.json();\r\n//         login(data.token); // Assuming `login` function stores token\r\n//         setShowSuccessMessage(true);\r\n//       } else {\r\n//         alert('Invalid credentials. Please try again.');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error authenticating user:', error);\r\n//       alert('An error occurred. Please try again later.');\r\n//     }\r\n//   };\r\n\r\n    const handleLogin = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5555/User/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ \r\n          Email: signInEmail, \r\n          Password: signInPassword \r\n        }), \r\n      });\r\n  \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        login(data.token);\r\n        setShowSuccessMessage(true);\r\n      } else {\r\n        alert('Invalid credentials. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error authenticating user:', error);\r\n      alert('An error occurred. Please try again later.');\r\n    }\r\n  };\r\n  \r\n\r\n  const handleSignUp = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5555/User/signup', { // Update with your backend URL\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ Name: signUpName, Email: signUpEmail, Password: signUpPassword }), // Ensure keys match backend\r\n      });\r\n\r\n      if (response.ok) {\r\n        setIsSignUp(false);\r\n        setSignUpName('');\r\n        setSignUpEmail('');\r\n        setSignUpPassword('');\r\n      } else {\r\n        alert('Sign up failed. Please try again.');\r\n      }\r\n    } catch (error) {\r\n    //   console.error('Error signing up user:', error);\r\n    console.log(error);\r\n      alert('An error occurred. Please try again later.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-page\">\r\n      <div className=\"body-container\">\r\n        <div className=\"container\" id=\"container\">\r\n          <div className={`form-container ${isSignUp ? 'sign-up-container' : 'sign-in-container'}`}>\r\n            <h2>{isSignUp ? 'Sign Up' : 'Sign In'}</h2>\r\n            {!isSignUp && (\r\n              <>\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  value={signInEmail}\r\n                  onChange={(e) => setSignInEmail(e.target.value)}\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={signInPassword}\r\n                  onChange={(e) => setSignInPassword(e.target.value)}\r\n                />\r\n                <button className=\"btn-grad\" onClick={handleLogin}>\r\n                  Sign In\r\n                </button>\r\n              </>\r\n            )}\r\n            {isSignUp && (\r\n              <>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Name\"\r\n                  value={signUpName}\r\n                  onChange={(e) => setSignUpName(e.target.value)}\r\n                />\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  value={signUpEmail}\r\n                  onChange={(e) => setSignUpEmail(e.target.value)}\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={signUpPassword}\r\n                  onChange={(e) => setSignUpPassword(e.target.value)}\r\n                />\r\n                <button className=\"btn-grad\" onClick={handleSignUp}>\r\n                  Sign Up\r\n                </button>\r\n              </>\r\n            )}\r\n            <a href=\"#\" onClick={() => setIsSignUp(!isSignUp)}>\r\n              {isSignUp ? 'Already have an account? Sign in' : 'Don\\'t have an account? Sign up'}\r\n            </a>\r\n          </div>\r\n          {showSuccessMessage && (\r\n            <div className=\"success-message\">\r\n              <p>Successful Sign In</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
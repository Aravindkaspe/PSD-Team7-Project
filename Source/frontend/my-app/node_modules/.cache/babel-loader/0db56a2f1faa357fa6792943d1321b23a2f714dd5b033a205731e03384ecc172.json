{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aravind Kaspe\\\\Desktop\\\\SLU-CS\\\\SLU Courses\\\\PSD\\\\PSD-Team7-Project\\\\Source\\\\frontend\\\\my-app\\\\src\\\\Pages\\\\ShopPage.js\",\n  _s = $RefreshSig$();\n// // ShopPage.js\n// import React, { useState } from 'react';\n// import ProductCard from '../Components/ProductCard';\n// import NavigationBar from '../Components/NavigationBar';\n// import '../Styles/ShopPage.css';\n\n// const ShopPage = () => {\n//     // Dummy product data\n//     const [products, setProducts] = useState([\n//         { id: 1, name: 'Mandala Planter White Pearl', price: 51, type: 'Planter', color: 'White', image: 'path/to/white-planter.jpg' },\n//         { id: 2, name: 'Mandala Stool Brown Wood', price: 544, type: 'Furniture', color: 'Brown', image: 'path/to/brown-stool.jpg' },\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\n//         // Add more products here\n//     ]);\n\n//     // Dummy cart data\n//     const [cart, setCart] = useState([]);\n\n//     // Function to add a product to the cart\n//     const addToCart = (product) => {\n//         const existingProduct = cart.find(item => item.id === product.id);\n//         if (existingProduct) {\n//             const updatedCart = cart.map(item => {\n//                 if (item.id === product.id) {\n//                     return { ...item, quantity: item.quantity + 1 };\n//                 }\n//                 return item;\n//             });\n//             setCart(updatedCart);\n//         } else {\n//             setCart([...cart, { ...product, quantity: 1 }]);\n//         }\n//     };\n\n//     return (\n//         <div className=\"shop-page\">\n//             <NavigationBar cartItemCount={cart.reduce((total, item) => total + item.quantity, 0)} />\n//             <div className=\"shop-content\">\n//                 <div className=\"sidebar\">\n//                     <h3>Filters</h3>\n//                     <div>\n//                         <h4>Product type</h4>\n//                         <div>\n//                             <input type=\"checkbox\" id=\"furniture\" />\n//                             <label htmlFor=\"furniture\">Furniture</label>\n//                         </div>\n//                         {/* Add more checkboxes for other product types */}\n//                     </div>\n//                     {/* Add more filters here */}\n//                 </div>\n//                 <div className=\"product-list\">\n//                     <div className=\"product-list-header\">\n//                         <h2>Shop All</h2>\n//                         <div>\n//                             <span>Sort by:</span>\n//                             <select>\n//                                 <option value=\"price\">Price</option>\n//                             </select>\n//                         </div>\n//                     </div>\n//                     <div className=\"product-grid\">\n//                         {products.map(product => (\n//                             <ProductCard key={product.id} product={product} addToCart={addToCart} />\n//                         ))}\n//                     </div>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default ShopPage;\n\n// ShopPage.js\nimport React, { useState, useEffect } from 'react';\nimport ProductCard from '../Components/ProductCard';\nimport NavigationBar from '../Components/NavigationBar';\nimport { fetchProducts } from '../Components/api/productApi'; // Import the fetchProducts function\nimport '../Styles/ShopPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShopPage = () => {\n  _s();\n  // Static product data\n  const staticProducts = [{\n    id: 1,\n    name: 'Mandala Planter White Pearl',\n    price: 51,\n    type: 'Planter',\n    color: 'White',\n    image: 'path/to/white-planter.jpg'\n  }, {\n    id: 2,\n    name: 'Mandala Stool Brown Wood',\n    price: 544,\n    type: 'Furniture',\n    color: 'Brown',\n    image: 'path/to/brown-stool.jpg'\n  }, {\n    id: 3,\n    name: 'Mandala Planters Clear',\n    price: 51,\n    type: 'Planter',\n    color: 'Clear',\n    image: 'path/to/clear-planter.jpg'\n  }];\n  const [products, setProducts] = useState(staticProducts);\n  const [filteredProducts, setFilteredProducts] = useState(staticProducts);\n  const [isLoadingProducts, setIsLoadingProducts] = useState(false);\n  const [filterOptions, setFilterOptions] = useState({\n    furniture: false,\n    planters: false,\n    sortOrder: 'asc'\n  });\n  useEffect(() => {\n    const filterProducts = async () => {\n      let filtered = [...products];\n      if (filterOptions.furniture || filterOptions.planters) {\n        setIsLoadingProducts(true);\n        try {\n          const fetchedProducts = await fetchProducts(filterOptions);\n          filtered = fetchedProducts;\n        } catch (error) {\n          console.error('Error fetching products:', error);\n        } finally {\n          setIsLoadingProducts(false);\n        }\n      }\n      filtered.sort((a, b) => {\n        if (filterOptions.sortOrder === 'asc') {\n          return a.price - b.price;\n        } else {\n          return b.price - a.price;\n        }\n      });\n      setFilteredProducts(filtered);\n    };\n    filterProducts();\n  }, [filterOptions, products]);\n  const handleFilterChange = e => {\n    setFilterOptions({\n      ...filterOptions,\n      [e.target.name]: e.target.checked\n    });\n  };\n\n  // Dummy cart data and addToCart function\n  const [cart, setCart] = useState([]);\n  const addToCart = product => {\n    const existingProduct = cart.find(item => item.id === product.id);\n    if (existingProduct) {\n      const updatedCart = cart.map(item => {\n        if (item.id === product.id) {\n          return {\n            ...item,\n            quantity: item.quantity + 1\n          };\n        }\n        return item;\n      });\n      setCart(updatedCart);\n    } else {\n      setCart([...cart, {\n        ...product,\n        quantity: 1\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shop-page\",\n    children: [/*#__PURE__*/_jsxDEV(NavigationBar, {\n      cartItemCount: cart.reduce((total, item) => total + item.quantity, 0)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Product type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"furniture\",\n              name: \"furniture\",\n              checked: filterOptions.furniture,\n              onChange: handleFilterChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"furniture\",\n              children: \"Furniture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"planters\",\n              name: \"planters\",\n              checked: filterOptions.planters,\n              onChange: handleFilterChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"planters\",\n              children: \"Planters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-list-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Shop All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Sort by:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"sortOrder\",\n              value: filterOptions.sortOrder,\n              onChange: handleFilterChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"asc\",\n                children: \"Price (Low to High)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"desc\",\n                children: \"Price (High to Low)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), isLoadingProducts ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading products...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-grid\",\n          children: filteredProducts.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n            product: product,\n            addToCart: addToCart\n          }, product.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopPage, \"/UrHENE52CFcM+VG44aXylT1Z6E=\");\n_c = ShopPage;\nexport default ShopPage;\nvar _c;\n$RefreshReg$(_c, \"ShopPage\");","map":{"version":3,"names":["React","useState","useEffect","ProductCard","NavigationBar","fetchProducts","jsxDEV","_jsxDEV","ShopPage","_s","staticProducts","id","name","price","type","color","image","products","setProducts","filteredProducts","setFilteredProducts","isLoadingProducts","setIsLoadingProducts","filterOptions","setFilterOptions","furniture","planters","sortOrder","filterProducts","filtered","fetchedProducts","error","console","sort","a","b","handleFilterChange","e","target","checked","cart","setCart","addToCart","product","existingProduct","find","item","updatedCart","map","quantity","className","children","cartItemCount","reduce","total","fileName","_jsxFileName","lineNumber","columnNumber","onChange","htmlFor","value","_c","$RefreshReg$"],"sources":["C:/Users/Aravind Kaspe/Desktop/SLU-CS/SLU Courses/PSD/PSD-Team7-Project/Source/frontend/my-app/src/Pages/ShopPage.js"],"sourcesContent":["\r\n// // ShopPage.js\r\n// import React, { useState } from 'react';\r\n// import ProductCard from '../Components/ProductCard';\r\n// import NavigationBar from '../Components/NavigationBar';\r\n// import '../Styles/ShopPage.css';\r\n\r\n// const ShopPage = () => {\r\n//     // Dummy product data\r\n//     const [products, setProducts] = useState([\r\n//         { id: 1, name: 'Mandala Planter White Pearl', price: 51, type: 'Planter', color: 'White', image: 'path/to/white-planter.jpg' },\r\n//         { id: 2, name: 'Mandala Stool Brown Wood', price: 544, type: 'Furniture', color: 'Brown', image: 'path/to/brown-stool.jpg' },\r\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\r\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\r\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\r\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\r\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\r\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\r\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\r\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\r\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\r\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\r\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\r\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\r\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\r\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\r\n//         { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\r\n//         // Add more products here\r\n//     ]);\r\n\r\n//     // Dummy cart data\r\n//     const [cart, setCart] = useState([]);\r\n\r\n//     // Function to add a product to the cart\r\n//     const addToCart = (product) => {\r\n//         const existingProduct = cart.find(item => item.id === product.id);\r\n//         if (existingProduct) {\r\n//             const updatedCart = cart.map(item => {\r\n//                 if (item.id === product.id) {\r\n//                     return { ...item, quantity: item.quantity + 1 };\r\n//                 }\r\n//                 return item;\r\n//             });\r\n//             setCart(updatedCart);\r\n//         } else {\r\n//             setCart([...cart, { ...product, quantity: 1 }]);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"shop-page\">\r\n//             <NavigationBar cartItemCount={cart.reduce((total, item) => total + item.quantity, 0)} />\r\n//             <div className=\"shop-content\">\r\n//                 <div className=\"sidebar\">\r\n//                     <h3>Filters</h3>\r\n//                     <div>\r\n//                         <h4>Product type</h4>\r\n//                         <div>\r\n//                             <input type=\"checkbox\" id=\"furniture\" />\r\n//                             <label htmlFor=\"furniture\">Furniture</label>\r\n//                         </div>\r\n//                         {/* Add more checkboxes for other product types */}\r\n//                     </div>\r\n//                     {/* Add more filters here */}\r\n//                 </div>\r\n//                 <div className=\"product-list\">\r\n//                     <div className=\"product-list-header\">\r\n//                         <h2>Shop All</h2>\r\n//                         <div>\r\n//                             <span>Sort by:</span>\r\n//                             <select>\r\n//                                 <option value=\"price\">Price</option>\r\n//                             </select>\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className=\"product-grid\">\r\n//                         {products.map(product => (\r\n//                             <ProductCard key={product.id} product={product} addToCart={addToCart} />\r\n//                         ))}\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default ShopPage;\r\n\r\n\r\n// ShopPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport ProductCard from '../Components/ProductCard';\r\nimport NavigationBar from '../Components/NavigationBar';\r\nimport { fetchProducts } from '../Components/api/productApi'; // Import the fetchProducts function\r\nimport '../Styles/ShopPage.css';\r\n\r\nconst ShopPage = () => {\r\n    // Static product data\r\n    const staticProducts = [\r\n        { id: 1, name: 'Mandala Planter White Pearl', price: 51, type: 'Planter', color: 'White', image: 'path/to/white-planter.jpg' },\r\n        { id: 2, name: 'Mandala Stool Brown Wood', price: 544, type: 'Furniture', color: 'Brown', image: 'path/to/brown-stool.jpg' },\r\n        { id: 3, name: 'Mandala Planters Clear', price: 51, type: 'Planter', color: 'Clear', image: 'path/to/clear-planter.jpg' },\r\n    ];\r\n\r\n    const [products, setProducts] = useState(staticProducts);\r\n    const [filteredProducts, setFilteredProducts] = useState(staticProducts);\r\n    const [isLoadingProducts, setIsLoadingProducts] = useState(false);\r\n    const [filterOptions, setFilterOptions] = useState({\r\n        furniture: false,\r\n        planters: false,\r\n        sortOrder: 'asc',\r\n    });\r\n\r\n    useEffect(() => {\r\n        const filterProducts = async () => {\r\n            let filtered = [...products];\r\n\r\n            if (filterOptions.furniture || filterOptions.planters) {\r\n                setIsLoadingProducts(true);\r\n\r\n                try {\r\n                    const fetchedProducts = await fetchProducts(filterOptions);\r\n                    filtered = fetchedProducts;\r\n                } catch (error) {\r\n                    console.error('Error fetching products:', error);\r\n                } finally {\r\n                    setIsLoadingProducts(false);\r\n                }\r\n            }\r\n\r\n            filtered.sort((a, b) => {\r\n                if (filterOptions.sortOrder === 'asc') {\r\n                    return a.price - b.price;\r\n                } else {\r\n                    return b.price - a.price;\r\n                }\r\n            });\r\n\r\n            setFilteredProducts(filtered);\r\n        };\r\n\r\n        filterProducts();\r\n    }, [filterOptions, products]);\r\n\r\n    const handleFilterChange = (e) => {\r\n        setFilterOptions({\r\n            ...filterOptions,\r\n            [e.target.name]: e.target.checked,\r\n        });\r\n    };\r\n\r\n    // Dummy cart data and addToCart function\r\n    const [cart, setCart] = useState([]);\r\n\r\n    const addToCart = (product) => {\r\n        const existingProduct = cart.find(item => item.id === product.id);\r\n        if (existingProduct) {\r\n            const updatedCart = cart.map(item => {\r\n                if (item.id === product.id) {\r\n                    return { ...item, quantity: item.quantity + 1 };\r\n                }\r\n                return item;\r\n            });\r\n            setCart(updatedCart);\r\n        } else {\r\n            setCart([...cart, { ...product, quantity: 1 }]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"shop-page\">\r\n            <NavigationBar cartItemCount={cart.reduce((total, item) => total + item.quantity, 0)} />\r\n            <div className=\"shop-content\">\r\n                <div className=\"sidebar\">\r\n                    <h3>Filters</h3>\r\n                    <div>\r\n                        <h4>Product type</h4>\r\n                        <div className=\"filter-option\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id=\"furniture\"\r\n                                name=\"furniture\"\r\n                                checked={filterOptions.furniture}\r\n                                onChange={handleFilterChange}\r\n                            />\r\n                            <label htmlFor=\"furniture\">Furniture</label>\r\n                        </div>\r\n                        <div className=\"filter-option\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id=\"planters\"\r\n                                name=\"planters\"\r\n                                checked={filterOptions.planters}\r\n                                onChange={handleFilterChange}\r\n                            />\r\n                            <label htmlFor=\"planters\">Planters</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"product-list\">\r\n                    <div className=\"product-list-header\">\r\n                        <h2>Shop All</h2>\r\n                        <div>\r\n                            <span>Sort by:</span>\r\n                            <select name=\"sortOrder\" value={filterOptions.sortOrder} onChange={handleFilterChange}>\r\n                                <option value=\"asc\">Price (Low to High)</option>\r\n                                <option value=\"desc\">Price (High to Low)</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    {isLoadingProducts ? (\r\n                        <div>Loading products...</div>\r\n                    ) : (\r\n                        <div className=\"product-grid\">\r\n                            {filteredProducts.map(product => (\r\n                                <ProductCard key={product.id} product={product} addToCart={addToCart} />\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShopPage;"],"mappings":";;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,SAASC,aAAa,QAAQ,8BAA8B,CAAC,CAAC;AAC9D,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB;EACA,MAAMC,cAAc,GAAG,CACnB;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,6BAA6B;IAAEC,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAA4B,CAAC,EAC9H;IAAEL,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,0BAA0B;IAAEC,KAAK,EAAE,GAAG;IAAEC,IAAI,EAAE,WAAW;IAAEC,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAA0B,CAAC,EAC5H;IAAEL,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,wBAAwB;IAAEC,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAA4B,CAAC,CAC5H;EAED,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAACS,cAAc,CAAC;EACxD,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnB,QAAQ,CAACS,cAAc,CAAC;EACxE,MAAM,CAACW,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC;IAC/CwB,SAAS,EAAE,KAAK;IAChBC,QAAQ,EAAE,KAAK;IACfC,SAAS,EAAE;EACf,CAAC,CAAC;EAEFzB,SAAS,CAAC,MAAM;IACZ,MAAM0B,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAIC,QAAQ,GAAG,CAAC,GAAGZ,QAAQ,CAAC;MAE5B,IAAIM,aAAa,CAACE,SAAS,IAAIF,aAAa,CAACG,QAAQ,EAAE;QACnDJ,oBAAoB,CAAC,IAAI,CAAC;QAE1B,IAAI;UACA,MAAMQ,eAAe,GAAG,MAAMzB,aAAa,CAACkB,aAAa,CAAC;UAC1DM,QAAQ,GAAGC,eAAe;QAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QACpD,CAAC,SAAS;UACNT,oBAAoB,CAAC,KAAK,CAAC;QAC/B;MACJ;MAEAO,QAAQ,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACpB,IAAIZ,aAAa,CAACI,SAAS,KAAK,KAAK,EAAE;UACnC,OAAOO,CAAC,CAACrB,KAAK,GAAGsB,CAAC,CAACtB,KAAK;QAC5B,CAAC,MAAM;UACH,OAAOsB,CAAC,CAACtB,KAAK,GAAGqB,CAAC,CAACrB,KAAK;QAC5B;MACJ,CAAC,CAAC;MAEFO,mBAAmB,CAACS,QAAQ,CAAC;IACjC,CAAC;IAEDD,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAACL,aAAa,EAAEN,QAAQ,CAAC,CAAC;EAE7B,MAAMmB,kBAAkB,GAAIC,CAAC,IAAK;IAC9Bb,gBAAgB,CAAC;MACb,GAAGD,aAAa;MAChB,CAACc,CAAC,CAACC,MAAM,CAAC1B,IAAI,GAAGyB,CAAC,CAACC,MAAM,CAACC;IAC9B,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMyC,SAAS,GAAIC,OAAO,IAAK;IAC3B,MAAMC,eAAe,GAAGJ,IAAI,CAACK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACnC,EAAE,KAAKgC,OAAO,CAAChC,EAAE,CAAC;IACjE,IAAIiC,eAAe,EAAE;MACjB,MAAMG,WAAW,GAAGP,IAAI,CAACQ,GAAG,CAACF,IAAI,IAAI;QACjC,IAAIA,IAAI,CAACnC,EAAE,KAAKgC,OAAO,CAAChC,EAAE,EAAE;UACxB,OAAO;YAAE,GAAGmC,IAAI;YAAEG,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAG;UAAE,CAAC;QACnD;QACA,OAAOH,IAAI;MACf,CAAC,CAAC;MACFL,OAAO,CAACM,WAAW,CAAC;IACxB,CAAC,MAAM;MACHN,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAE;QAAE,GAAGG,OAAO;QAAEM,QAAQ,EAAE;MAAE,CAAC,CAAC,CAAC;IACnD;EACJ,CAAC;EAED,oBACI1C,OAAA;IAAK2C,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtB5C,OAAA,CAACH,aAAa;MAACgD,aAAa,EAAEZ,IAAI,CAACa,MAAM,CAAC,CAACC,KAAK,EAAER,IAAI,KAAKQ,KAAK,GAAGR,IAAI,CAACG,QAAQ,EAAE,CAAC;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxFnD,OAAA;MAAK2C,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzB5C,OAAA;QAAK2C,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACpB5C,OAAA;UAAA4C,QAAA,EAAI;QAAO;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChBnD,OAAA;UAAA4C,QAAA,gBACI5C,OAAA;YAAA4C,QAAA,EAAI;UAAY;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBnD,OAAA;YAAK2C,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC1B5C,OAAA;cACIO,IAAI,EAAC,UAAU;cACfH,EAAE,EAAC,WAAW;cACdC,IAAI,EAAC,WAAW;cAChB2B,OAAO,EAAEhB,aAAa,CAACE,SAAU;cACjCkC,QAAQ,EAAEvB;YAAmB;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChC,CAAC,eACFnD,OAAA;cAAOqD,OAAO,EAAC,WAAW;cAAAT,QAAA,EAAC;YAAS;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC,eACNnD,OAAA;YAAK2C,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC1B5C,OAAA;cACIO,IAAI,EAAC,UAAU;cACfH,EAAE,EAAC,UAAU;cACbC,IAAI,EAAC,UAAU;cACf2B,OAAO,EAAEhB,aAAa,CAACG,QAAS;cAChCiC,QAAQ,EAAEvB;YAAmB;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChC,CAAC,eACFnD,OAAA;cAAOqD,OAAO,EAAC,UAAU;cAAAT,QAAA,EAAC;YAAQ;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACNnD,OAAA;QAAK2C,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACzB5C,OAAA;UAAK2C,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAChC5C,OAAA;YAAA4C,QAAA,EAAI;UAAQ;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBnD,OAAA;YAAA4C,QAAA,gBACI5C,OAAA;cAAA4C,QAAA,EAAM;YAAQ;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACrBnD,OAAA;cAAQK,IAAI,EAAC,WAAW;cAACiD,KAAK,EAAEtC,aAAa,CAACI,SAAU;cAACgC,QAAQ,EAAEvB,kBAAmB;cAAAe,QAAA,gBAClF5C,OAAA;gBAAQsD,KAAK,EAAC,KAAK;gBAAAV,QAAA,EAAC;cAAmB;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAChDnD,OAAA;gBAAQsD,KAAK,EAAC,MAAM;gBAAAV,QAAA,EAAC;cAAmB;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,EACLrC,iBAAiB,gBACdd,OAAA;UAAA4C,QAAA,EAAK;QAAmB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,gBAE9BnD,OAAA;UAAK2C,SAAS,EAAC,cAAc;UAAAC,QAAA,EACxBhC,gBAAgB,CAAC6B,GAAG,CAACL,OAAO,iBACzBpC,OAAA,CAACJ,WAAW;YAAkBwC,OAAO,EAAEA,OAAQ;YAACD,SAAS,EAAEA;UAAU,GAAnDC,OAAO,CAAChC,EAAE;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA2C,CAC1E;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACjD,EAAA,CA/HID,QAAQ;AAAAsD,EAAA,GAARtD,QAAQ;AAiId,eAAeA,QAAQ;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}